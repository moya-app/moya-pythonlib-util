name: Python package

on: [push]

permissions:
  contents: read # This is required for actions/checkout
  packages: write # This is required to push images to Github packages
  id-token: write # This is required for requesting the JWT token

jobs:
  build:
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        pydantic-version: ["v1", "v2"]
        builder: ["buildjet-2vcpu-ubuntu-2204", "buildjet-2vcpu-ubuntu-2204-arm"]

    runs-on: ${{ matrix.builder }}
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v4
      -
        name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: session-${{ github.run_id }}-${{ github.run_attempt }}
          aws-region: eu-west-1
      -
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install dependencies
        run: |
          python -m pip install -e ".[dev,pydantic-${{ matrix.pydantic-version }},all]"
      -
        name: Run lint
        run: |
          poe lint
      -
        name: Test with pytest
        # A 250 exit status sometimes randomly comes from the coverage report black magic
        run: |
          poe test -vv
      -
        name: Run live redis tests
        run: |
          cd test_envs/redis-sentinel
          docker-compose pull
          docker compose up -d

          export REDIS_URL="redis://$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker-compose ps -q redis-master)):6379/0"
          export REDIS_SLAVE_URL="redis://$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker-compose ps -q redis-slave)):6379/0"
          export SENTINEL_HOSTS="$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker-compose ps -q redis-sentinel) | jq --slurp -R -c 'split("\n") | map(select(.!="") | [., 26379])')"
          poe test -vv
        env:
          DOCKER_HUB_URL: ${{ vars.DOCKER_HUB_URL }}
